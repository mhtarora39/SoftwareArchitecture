Maximum In Sliding Window
Problem Statement:
An integer array named arr is given to you. Size of arr is n and assume that it is very large.
There is a sliding window of size w which is moving from the very left of the array to the very right. You can only see the w numbers in the window. Each time the sliding window moves rightwards by one position. You have to find maximum number in the window each time. 
Input Format:
There are two arguments in input. First is an integer array arr. Second is the window width w.
Output Format:
Return an array, where i-th number of the returned array contains the maximum number from arr[i] to arr[i+w-1].
Constraints:
1 <= n <= 10^5
-2 * 10^9 <= arr[i] <= 2 * 10^9
1 <= w <= n
Sample Test Case:
Sample Input:
arr = [1 3 -1 -3 5 3 6 7]
w = 3
Sample Output:
[3, 3, 5, 5, 6, 7]
Explanation:
Window Position -> Max
1) [1 3 -1] -3 5 3 6 7 -> 3
2) 1 [3 -1 -3] 5 3 6 7 -> 3
3) 1 3 [-1 -3 5] 3 6 7 -> 5
4) 1 3 -1 [-3 5 3] 6 7 -> 5
5) 1 3 -1 -3 [5 3 6] 7 -> 6
6) 1 3 -1 -3 5 [3 6 7] -> 7
Notes:
Suggested time in interview: 20 minutes.
The “Suggested Time” is the time expected to complete this question during a real-life interview, not now in homework i.e. For the first attempt of a given homework problem, the focus should be to understand what the problem is asking, what approach you are using, coding it, as well as identifying any gaps that you can discuss during a TA session. Take your time, but limit yourself to 2 one hour sessions for most problems.
